---
- hosts: all

  vars:
    kbs:
      - guid: 2/5/6/256CCCFB-5341-4A8D-A277-8A81B21A1E35
        filename: clearcompressionflag.exe
      - guid: D/6/0/D60ED3E0-93A5-4505-8F6A-8D0A5DA16C8A
        filename: Windows8.1-KB2919442-x64.msu
      - guid: 2/5/6/256CCCFB-5341-4A8D-A277-8A81B21A1E35
        filename: Windows8.1-KB2919355-x64.msu
      - guid: 2/5/6/256CCCFB-5341-4A8D-A277-8A81B21A1E35
        filename: Windows8.1-KB2932046-x64.msu
      - guid: 2/5/6/256CCCFB-5341-4A8D-A277-8A81B21A1E35
        filename: Windows8.1-KB2959977-x64.msu
      - guid: 2/5/6/256CCCFB-5341-4A8D-A277-8A81B21A1E35
        filename: Windows8.1-KB2937592-x64.msu
      - guid: 2/5/6/256CCCFB-5341-4A8D-A277-8A81B21A1E35
        filename: Windows8.1-KB2938439-x64.msu
      - guid: 2/5/6/256CCCFB-5341-4A8D-A277-8A81B21A1E35
        filename: Windows8.1-KB2934018-x64.msu
      - guid: D/1/3/D13E3150-3BB2-4B22-9D8A-47EE2D609FFF
        filename: Windows8.1-KB2999226-x64.msu
      # fix for kb3035131 (exited 5)
      - guid: A/B/7/AB7824E4-A7BC-49A0-BBAB-0556344F8747
        filename: Windows8.1-KB3035131-x64.msu

  tasks:

    - name: Install pre-req Windows updates
      include: install-kb.yml
      with_items: "{{ kbs }}"
      tags: kbs

    # Needed for WiX Toolset
    - name: Enable .NET Framework 3.5
      win_feature:
        name: "NET-Framework-Core"
        state: present

    - name: Install tools
      win_chocolatey:
        name: "{{ item }}"
        allow_empty_checksums: "yes"
      with_items:
        - kb2919355
        - kb2999226
        - kb2919442
        - 7zip.commandline
        - awstools.powershell
        - cmake
        - curl
        - docfx
        - git
        - jdk8
        - ninja
        - python2
        - wget
        - wixtoolset

    # Code depends on .NET Framework 4.5.2 (chocolatey package "dotnet4.5.2"),
    # but that package fails to install via Ansible due to silly limitations
    # in WinRM (see also: all the nonsense in install-kb.yml). However, the
    # framework is actually installed by default on Server 2012R2, so there's
    # no need to install it. So we just tell chocolatey to skip dependencies.
    - name: Install Visual Studio Code
      win_chocolatey:
        name: "visualstudiocode"
        ignore_dependencies: yes

    - name: Create directory structure
      win_file:
        path: C:\bin
        state: directory

    - name: Install repo
      win_copy:
        src: "repo.exe"
        dest: "C:\\bin\\repo.exe"

    - name: Add tools to PATH.
      include: extend-path.yml
      with_items:
        - C:\bin
        - C:\Program Files\CMake\bin
        - C:\Program Files\git\cmd
        - C:\Program Files (x86)\WiX Toolset v3.11\bin

    - name: Install OpenSSH (for Jenkins)
      script: openssh.ps1

    - name: Copy SSH config files
      win_copy:
        src: "./ssh/{{ item }}"
        dest: C:\Users\Administrator\.ssh\{{ item }}
      with_items:
        - authorized_keys
        - buildbot_id_dsa
        - config
        - environment
        - id_rsa
        - known_hosts

    - name: Enable Remote Desktop
      win_regedit:
        key: 'HKLM:\System\CurrentControlSet\Control\Terminal Server'
        name: fDenyTSConnections
        data: 0
        type: dword
        state: present

    - name: Open Remote Desktop in firewall
      win_firewall_rule:
        name: "remote desktop"
        enable: yes
        state: present
        localport: 3389
        action: allow
        direction: in
        protocol: TCP
        force: true

    # https://docs.microsoft.com/en-us/visualstudio/install/use-command-line-parameters-to-install-visual-studio
    - name: Download vs_professional.exe installer
      win_get_url:
        url: "https://aka.ms/vs/15/release/vs_professional.exe"
        dest: C:\bin\vs_professional.exe

    - name: Check if MSVC2017 install
      win_stat:
        path: C:\Program Files (x86)\Microsoft VisualStudio\Installer\resources\app\layout\InstallCleanup.exe
      register: msvc2017_installcleanup

    - debug: var=msvc2017_installcleanup.stdout_lines

    - name: "Run MSVC2017 install cleanup"
      win_command: '"C:\Program Files (x86)\Microsoft VisualStudio\Installer\resources\app\layout\InstallCleanup.exe" -full'
      when: msvc2017_installcleanup.stat.exists == True

    - name: Install Visual Studio Professional 2017 and dotnet tools
      win_command: C:\bin\vs_professional.exe --add Microsoft.VisualStudio.Workload.Azure --add Microsoft.VisualStudio.Workload.ManagedDesktop --add Microsoft.VisualStudio.Workload.NativeDesktop  --add Microsoft.VisualStudio.Workload.NativeMobile --add Microsoft.VisualStudio.Workload.NetCoreTools --add Microsoft.VisualStudio.Workload.NetCrossPlat --add Microsoft.VisualStudio.Workload.NetWeb --add Microsoft.VisualStudio.Workload.Universal --add Microsoft.VisualStudio.Workload.WebCrossPlat --add Component.Android.NDK.R15C --add Component.Android.SDK27 --add Microsoft.VisualStudio.Component.Windows10SDK.16299.Desktop --add Microsoft.VisualStudio.Component.Windows10SDK.16299.UWP --add Microsoft.VisualStudio.Component.Windows10SDK.16299.UWP.Native --add Microsoft.VisualStudio.ComponentGroup.UWP.VC --quiet --productKey "{{ vskey }}" --addProductLang en-US --norestart --wait --nocache
      register: install_output
      failed_when: ( install_output.rc not in [ 3010, 0 ] )

    - debug: var=install_output.stdout_lines

    - name: Reboot Windows if necessary
      win_reboot:
        shutdown_timeout_sec: 3600
        reboot_timeout_sec: 3600
